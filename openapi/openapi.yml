openapi: 3.0.0
info:
  description: |
    > This `draft` version represents the next release of the API.

    Provides an interface for calculating charges, creating and queuing transactions, and generating transaction and customer files used to produce Environment Agency invoices.

    ## Working with the API

    The [SRoC service team](https://github.com/DEFRA/sroc-service-team) use [Postman](https://www.postman.com/) as the means to interact with the API. Check out their [docs](https://github.com/DEFRA/sroc-service-team/postman) for info on how to go about setting up your own Postman environment.

    ## Known issues

    ### Documentation

    - Any [4xx](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) and [5xx](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status) responses are not currently covered in the documenation
    - The **Try it!** feature will not work in published versions of this spec. Access to the API is only possible via the VPN

    ### API

    - Query params are case senstive. Ensure they match what is in the spec below to avoid `422 - Unprocessable Entity` errors
    - To generate a bill run summary you need to call the 'View Billrun' endpoint. It is known bill runs with a large number of transactions (8-9K or more) and a lots of different customers can take a number of hours to complete
  version: "draft"
  title: Charging Module API
  contact:
    name: SRoC Service Team
    email: alan.cruikshanks@environment-agency.gov.uk
    url: 'https://github.com/DEFRA/sroc-service-team'
  license:
    name: Open Government Licence (OGL)
    url: 'http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3'
servers:
  - description: Local
    url: 'http://localhost:3003'

tags:
  - name: admin
    description: "Only the admin user can access these endpoints. They are not for use by client systems"
  - name: billrun
    description: "Operations related to bill runs"
  - name: calculate
    description: "Operations related to calculating charges"
  - name: customer
    description: "Operations related to customer files"
  - name: health
    description: "Endpoints used to confirm the system is up. Often used by monitoring tools running 'health checks'"
  - name: transaction
    description: "Operations related to transactions"

paths:
  /:
    get:
      operationId: Root
      description: "Confirm service is up and running. Exactly the same as `/status`"
      tags:
        - health
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: 'schema/schemas.yml#/status'

  /status:
    $ref: 'paths/status.yml'

  '/admin/regimes':
    $ref: 'paths/admin/regimes.yml'

  '/admin/regimes/{regime}':
    $ref: 'paths/admin/regime.yml'

  '/admin/authorised-systems':
    $ref: 'paths/admin/authorised_systems.yml'

  '/admin/authorised-systems/{authorisedSystemId}':
    $ref: 'paths/admin/authorised_system.yml'

  '/admin/health/airbrake':
    $ref: 'paths/admin/health/airbrake.yml'

  '/admin/health/database':
    $ref: 'paths/admin/health/database.yml'

  '/admin/test/{regime}/customer-files':
    $ref: 'paths/admin/test/customer_files.yml'

  '/admin/test/{regime}/customer-files/{customerFileId}':
    $ref: 'paths/admin/test/customer_file.yml'

  '/v1/{regime}/billruns':
    $ref: 'paths/v1/billruns/bill_runs.yml'

  '/v1/{regime}/billruns/{billrunId}':
    $ref: 'paths/v1/billruns/bill_run.yml'

  '/v1/{regime}/billruns/{billrunId}/approve':
    $ref: 'paths/v1/billruns/bill_run_approve.yml'

  '/v1/{regime}/billruns/{billrunId}/send':
    $ref: 'paths/v1/billruns/bill_run_send.yml'

  '/v1/{regime}/billruns/{billrunId}/transactions':
    $ref: 'paths/v1/billruns/transactions/bill_run_transactions.yml'

  '/v1/{regime}/billruns/{billrunId}/transactions/{transactionId}':
    $ref: 'paths/v1/billruns/transactions/bill_run_transaction.yml'

  '/v1/{regime}/calculate-charge':
    $ref: 'paths/v1/calculate_charge/calculate_charge.yml'

  '/v1/{regime}/calculate_charge':
    $ref: 'paths/v1/calculate_charge/deprecated_calculate_charge.yml'

  '/v1/{regime}/customer-changes':
    $ref: 'paths/v1/customer_changes/customer_changes.yml'

  '/v1/{regime}/customer_changes':
    $ref: 'paths/v1/customer_changes/deprecated_customer_changes.yml'

  '/v1/{regime}/transactions':
    $ref: 'paths/v1/transactions/transactions.yml'

  '/v1/{regime}/transactions/{transactionId}':
    $ref: 'paths/v1/transactions/transaction.yml'

security:
  - OAuth2: []

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: "The API uses [AWS Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/what-is-amazon-cognito.html) to manage authentication and authorisation. To use it you will first need a cognito client ID and password. You then use these to request a bearer token from AWS Cognito. The bearer token is then sent in the `Authorisation` header of your request"
      flows:
        clientCredentials:
          tokenUrl: 'https://chargingmoduleapi.auth.eu-west-1.amazoncognito.com/oauth2/token'
          scopes: {}
